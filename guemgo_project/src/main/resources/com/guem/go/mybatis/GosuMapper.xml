<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	2018-11-04	윤우현 파일 생성

 -->
<mapper namespace="com.guem.go.mybatis.GosuMapper">
	
	<sql id="search">
		<if test="field!=null and field!=''">
			where ${field} like '%'|| #{keyword} ||'%'
		</if>
	</sql>
	
	<!-- 고수가입 -->
	<insert id="insert" parameterType="com.guem.go.woohyun.GosuVo">
	insert all 
		into gosu(go_num, email, intro, grade, employ, career) values(gonum_seq.nextval, #{email }, #{intro }, #{grade }, #{employ }, #{career } )
		<if test=" license!=null and license!='' ">	<!-- license 이미지가 없으면 DB에 넣지 않음 -->
			into gosu_career(go_num, license) values(gonum_seq.currval, #{license })	<!-- gonum을 위에 gonum_seq와 동일하게 해야함 -->
		</if>
		<if test="g_image !=null and g_image !='' ">	<!-- image가 없으면 DB에 넣지 않음 -->
			into gosu_image(go_num, image) values(gonum_seq.currval, #{g_image })
		</if>
		select * from dual
	</insert>
	
	<!-- 고수리스트 조회 -->
	<!-- <select id="list" resultType="com.guem.go.woohyun.GosuVo">
		select a.go_num, b.m_num, a.email, b.name, a.grade, a.employ, b.point 
		from gosu a, users b
		where a.email=b.email
	</select> -->
	
	<select id="list" parameterType="map" resultType="com.guem.go.woohyun.GosuVo">
		select * from
		(
			select aa.*,rownum rnum from
			(
				select * from gosu
				<include refid="search"/>
				<choose>
					<when test="sort!=null and sort!=''">
						order by ${sort} desc
					</when>
					<otherwise>
						order by go_num desc
					</otherwise>
				</choose>
			)aa
		)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
	</select>
	
	<select id="getCount" parameterType="map" resultType="int">
		select NVL(count(*),0) cnt from gosu
		<include refid="search"/>
	</select>
	
	<!-- 고수 삭제(실제) -->
<!-- 	<delete id="delete" parameterType="String"> -->
<!-- 		delete from gosu where email=#{email} -->
<!-- 	</delete> -->
	
	<!-- 고수 삭제 (flag만 9로 변경)-->
	<delete id="update_f" parameterType="String">
		update users set flag='9' where email=#{email}
	</delete>	
	
	<!-- 고수 정보 수정(1명 조회) -->
	<select id="detail" resultType="com.guem.go.woohyun.GosuVo" parameterType="String">
		select a.go_num, b.m_num, a.email, b.name, a.grade, a.employ, b.point 
		from gosu a, users b
		where a.email=b.email
		and a.email=#{email}
	</select>
	
	<!-- 고수 정보 수정(업데이트) 트랜잭션 처리 해야함 -->
	<update id="update" parameterType="com.guem.go.woohyun.GosuVo">
		update gosu set grade=#{grade}, employ=#{employ} where email=#{email}
	</update>
	
	<!-- 고수 정보 수정(업데이트) 트랜잭션 처리 해야함-->
	<update id="update_user" parameterType="com.guem.go.woohyun.GosuVo">
		update users set point=#{point} where email=#{email}
	</update>
	
	<!-- ?? -->
	<select id="gosuNum" parameterType="String" resultType="int">
		select go_num from gosu where email=#{email}
	</select>
	
	<!-- 고수 프로필 수정1,  트랜잭션 처리 해야함 -->
	<update id="update_profile1" parameterType="com.guem.go.woohyun.GosuVo">
		update gosu set intro=#{intro }, career=#{career } where email=#{email }
	</update>
	
	<!-- 고수 프로필 수정2, 자격증 넣기, 트랜잭션 처리 해야함, 기존에 데이터가 없을경우에는 insert 해야함 -->
	<update id="update_profile2" parameterType="com.guem.go.woohyun.GosuVo">
		<choose>
			<when test="org_license!=null and org_license!='' ">
					update gosu_career set license=#{license} where go_num=#{go_num}
			</when>
			<otherwise>
				insert into gosu_career(go_num, license) values(#{go_num}, #{license})
			</otherwise>
		</choose>
	</update>
	
	<!-- 고수 프로필 수정3 고수 이미지 넣기, 트랜잭션 처리 해야함, 기존에 데이터가 없을경우에는 insert 해야함 -->
	<update id="update_profile3" parameterType="com.guem.go.woohyun.GosuVo">
		<choose>
			<when test="org_g_image!=null and org_g_image!='' ">
					update gosu_image set image=#{g_image} where go_num=#{go_num}
			</when>
			<otherwise>
				insert into gosu_image(go_num, image) values(#{go_num}, #{g_image})
			</otherwise>
		</choose>
	</update>
	
	<!-- 고수 이미지 넣는 부분, 아직 미구현. -->
	<!-- 
	<update id="update_profile3" parameterType="com.guem.go.woohyun.GosuVo">
		update gosu_image set image=#{image} where go_num=#{go_num}
	</update>
	 -->
	 
	<!-- 고수 프로필 디테일 조회 -->
	<select id="gosuDetail" resultType="com.guem.go.woohyun.GosuVo" parameterType="String">
		select a.email
		     , a.go_num
		     , a.intro
		     , a.grade
		     , a.employ
		     , a.career
		     , d.image as g_image
		     , c.license
		     , b.m_num
		     , b.name
		     , b.point
		     , b.image as u_image
		from gosu a
		   , users b
		   , gosu_career c
		   , gosu_image d
		where a.email=b.email 
        and a.go_num=c.go_num(+) 
        and a.go_num=d.go_num(+) 
		and a.email=#{email}
	</select>

	<!-- 고수 프로필 디테일 조회 -->
	<select id="gosuDetailLectureList" resultType="com.guem.go.woohyun.GosuVo" parameterType="String">
		select a.area
		  from gosu_area a
		     , lecture b
		     , gosu c
		 where a.lecturenum = b.lecturenum
		   and b.go_num = c.go_num
		   and c.email=#{email}
	</select>
	
	
</mapper>