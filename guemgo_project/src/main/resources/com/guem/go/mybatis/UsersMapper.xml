<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	2018-10-24	윤우현 파일 생성

 -->
<mapper namespace="com.guem.go.mybatis.UsersMapper">

	<sql id="search">
		<if test="field!=null and field!=''">
			where ${field} like '%'|| #{keyword} ||'%'
		</if>
	</sql>
	
	<!-- 회원가입 -->
	<insert id="insert" parameterType="com.guem.go.woohyun.UsersVo">
		insert into users values(#{email},#{flag},#{pwd},#{name},m_num_seq.nextval,#{grade},#{image },#{point},sysdate)
	</insert>
	
	<!-- 회원전체 리스트 -->
	<!-- <select id="list" resultType="com.guem.go.woohyun.UsersVo">
		select * from users
	</select> -->
	
	<select id="list" parameterType="map" resultType="com.guem.go.woohyun.UsersVo">
		select * from
		(
			select aa.*,rownum rnum from
			(
				select * from users
				<include refid="search"/>
				<choose>
					<when test="sort!=null and sort!=''">
						order by ${sort} desc
					</when>
					<otherwise>
						order by m_num desc
					</otherwise>
				</choose>
			)aa
		)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
	</select>
	
	<select id="getCount" parameterType="map" resultType="int">
		select NVL(count(*),0) cnt from users
		<include refid="search"/>
	</select>
	
	
	<!-- 회원삭제 -->
	<delete id="delete" parameterType="String">
		delete from users where email=#{email}
	</delete>	
	
	<!-- 회원 정보 수정(1명 조회) -->
	<select id="detail" resultType="com.guem.go.woohyun.UsersVo" parameterType="String">
		select * from users where email=#{email}
	</select>
	
	
	<!-- 회원 정보 수정(업데이트) -->
	<update id="update" parameterType="com.guem.go.woohyun.UsersVo">
		update users 
		  set name=#{name}
		    <if test="pwd!=null and pwd!=''">
		     ,pwd=#{pwd}
		    </if> 
		    <if test="grade!=null and grade!=''">
		     ,grade=#{grade}
		    </if> 
		    <if test="image!=null and image!=''">
		     ,image=#{image}
		    </if> 
		     ,point=#{point} 
	    where email=#{email}
	</update>
	
	<!-- 후기게시판에 따라 포인트 업데이트 -->
	<update id="pointUpdate" parameterType="hashmap">
		update users set point=point+#{point} where email=#{email}
	</update>
	
	<!-- 관심사 추가 -->
	<insert id="cate_insert" parameterType="com.guem.go.woohyun.UsersVo">
		insert into FAVORITE(fa_num, email, favorite) values(fa_num_seq.nextval, #{email}, #{sname})
	</insert>
	
	
</mapper>